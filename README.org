* Cl-ownpress 

Practically, cl-ownpress is a static site generator.

Theoretically, its primary objective is to
#+begin_quote
Give user the ability to publish their content while maintaining its ownership.
#+end_quote

Examples:
- Download your tweets and publish them on your own blog as micro-posts
- Download the comments made on your blog post shared on hacker-news and publish
  them on your blog
- Download comments you made on reddit and publish them on your own site,
  essentially creating a feed of your activity

** Goals

1. Paramount Hack-ability

2. Friction-free development experience
   
3. Just-works user experience

   Although cl-ownpress primarily targets software developers as users, but that
   does not mean it gets to ignore user-experience. Only using the software (i.e
   without any desire to hack it further) should achieve the "just works"
   standard.

* Software Architecture

Clownpress itself is not much more than a collection of utilities. It provides
some convenient constructs to achieve its goals, but bulk of the work is done by
its various components.

1. Provider

   A provider provides content. It reaches the source, collect, sanitize and
   stores the content user wants ownership on. For example =*fs-provider*=
   allows the ability to provide blog posts saved as text files on user's
   file-system.

2. Processor

   A processor converts collected content into formats different than original.
   e.g a processor might convert org-mode content to HTML.

3. Publisher

   A publisher converts saved content into publishable assets. To publish
   something has a very vague meaning, and that is intentional. e.g a publisher
   might create a complete blog website ready to be shared online.

4. Distributors

   A distributor takes the published content, and distributes (deploys) it so it
   can reach an audience. e.g a distributor might take a website produced by a
   publisher, and uploads it to github pages.
